{"ast":null,"code":"var _jsxFileName = \"/Users/grozaemanuel/smart_plate_monitoring/smart_plate_monitoring/src/StatisticsComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ref, get } from \"firebase/database\";\nimport { database } from \"./Firebase\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, ArcElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, ArcElement, Title, Tooltip, Legend);\nconst StatisticsComponent = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [plateChartData, setPlateChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Plate Number Frequency\",\n      data: [],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\"],\n      borderWidth: 1\n    }]\n  });\n  const [statusChartData, setStatusChartData] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: [\"rgba(75, 192, 192, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n      borderColor: [\"rgba(75, 192, 192, 1)\", \"rgba(255, 159, 64, 1)\"],\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const dbRef = ref(database, \"/\");\n      const snapshot = await get(dbRef);\n      const fetchedData = snapshot.val();\n      if (fetchedData) {\n        const dataArray = Object.values(fetchedData);\n        const flatDataArray = dataArray.reduce((acc, cur) => acc.concat(Object.values(cur)), []);\n        const reverseData = flatDataArray.reverse();\n        setData(reverseData.slice(0, 20));\n\n        // Process data for charts\n        const plateCount = {};\n        const statusCount = {};\n        flatDataArray.forEach(item => {\n          const plateName = item[\"Plate Name\"];\n          const SatusType = item.SatusType;\n          if (plateName) {\n            plateCount[plateName] = (plateCount[plateName] || 0) + 1;\n          }\n          if (SatusType) {\n            statusCount[SatusType] = (statusCount[SatusType] || 0) + 1;\n          }\n        });\n        setPlateChartData({\n          labels: Object.keys(plateCount),\n          datasets: [{\n            ...plateChartData.datasets[0],\n            data: Object.values(plateCount)\n          }]\n        });\n        setStatusChartData({\n          labels: Object.keys(statusCount),\n          datasets: [{\n            ...statusChartData.datasets[0],\n            data: Object.values(statusCount)\n          }]\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto my-8 p-4 bg-gray-900 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/2 p-2\",\n        style: {\n          minHeight: \"300px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Bar, {\n          data: plateChartData,\n          options: {\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              title: {\n                display: true,\n                text: \"Plate Number Frequency\"\n              }\n            },\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/2 p-2\",\n        style: {\n          minHeight: \"300px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n          data: statusChartData,\n          options: {\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              title: {\n                display: true,\n                text: \"Status Type Distribution\"\n              }\n            },\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4 text-2xl\",\n      children: \" Latest Entries \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full table-auto mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 text-left text-gray-200\",\n            children: \" Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 text-left text-gray-200\",\n            children: \" Day \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 text-left text-gray-200\",\n            children: \" Plate Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 text-left text-gray-200\",\n            children: \" Status Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [\" \", data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-b border-gray-800 odd:bg-gray-800 even:bg-gray-800 hover:bg-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 text-gray-300\",\n            children: [\" \", item.Date, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 text-gray-300\",\n            children: [\" \", item.Day, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 text-gray-300\",\n            children: [\" \", item[\"Plate Name\"], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 text-gray-300\",\n            children: [\" \", item.SatusType, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsComponent, \"p3yoJ6SiGcvJbv3hqPMqPP3CEmg=\");\n_c = StatisticsComponent;\nexport default StatisticsComponent;\nvar _c;\n$RefreshReg$(_c, \"StatisticsComponent\");","map":{"version":3,"names":["React","useEffect","useState","ref","get","database","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","StatisticsComponent","_s","data","setData","plateChartData","setPlateChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","statusChartData","setStatusChartData","fetchData","dbRef","snapshot","fetchedData","val","dataArray","Object","values","flatDataArray","reduce","acc","cur","concat","reverseData","reverse","slice","plateCount","statusCount","forEach","item","plateName","SatusType","keys","className","children","style","minHeight","options","plugins","legend","position","title","display","text","responsive","maintainAspectRatio","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Date","Day","_c","$RefreshReg$"],"sources":["/Users/grozaemanuel/smart_plate_monitoring/smart_plate_monitoring/src/StatisticsComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ref, get } from \"firebase/database\";\nimport { database } from \"./Firebase\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst StatisticsComponent = () => {\n  const [data, setData] = useState([]);\n  const [plateChartData, setPlateChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: \"Plate Number Frequency\",\n        data: [],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  });\n  const [statusChartData, setStatusChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [\"rgba(75, 192, 192, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n        borderColor: [\"rgba(75, 192, 192, 1)\", \"rgba(255, 159, 64, 1)\"],\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const dbRef = ref(database, \"/\");\n      const snapshot = await get(dbRef);\n      const fetchedData = snapshot.val();\n      if (fetchedData) {\n        const dataArray = Object.values(fetchedData);\n        const flatDataArray = dataArray.reduce(\n          (acc, cur) => acc.concat(Object.values(cur)),\n          []\n        );\n        const reverseData = flatDataArray.reverse();\n        setData(reverseData.slice(0, 20));\n\n        // Process data for charts\n        const plateCount = {};\n        const statusCount = {};\n        flatDataArray.forEach((item) => {\n          const plateName = item[\"Plate Name\"];\n          const SatusType = item.SatusType;\n          if (plateName) {\n            plateCount[plateName] = (plateCount[plateName] || 0) + 1;\n          }\n          if (SatusType) {\n            statusCount[SatusType] = (statusCount[SatusType] || 0) + 1;\n          }\n        });\n\n        setPlateChartData({\n          labels: Object.keys(plateCount),\n          datasets: [\n            {\n              ...plateChartData.datasets[0],\n              data: Object.values(plateCount),\n            },\n          ],\n        });\n\n        setStatusChartData({\n          labels: Object.keys(statusCount),\n          datasets: [\n            {\n              ...statusChartData.datasets[0],\n              data: Object.values(statusCount),\n            },\n          ],\n        });\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container mx-auto my-8 p-4 bg-gray-900 rounded-lg shadow-lg\">\n      <div className=\"flex flex-wrap justify-between items-center\">\n        <div\n          className=\"w-full lg:w-1/2 p-2\"\n          style={{\n            minHeight: \"300px\",\n          }}\n        >\n          <Bar\n            data={plateChartData}\n            options={{\n              plugins: {\n                legend: {\n                  position: \"top\",\n                },\n                title: {\n                  display: true,\n                  text: \"Plate Number Frequency\",\n                },\n              },\n              responsive: true,\n              maintainAspectRatio: false,\n            }}\n          />{\" \"}\n        </div>{\" \"}\n        <div\n          className=\"w-full lg:w-1/2 p-2\"\n          style={{\n            minHeight: \"300px\",\n          }}\n        >\n          <Doughnut\n            data={statusChartData}\n            options={{\n              plugins: {\n                legend: {\n                  position: \"top\",\n                },\n                title: {\n                  display: true,\n                  text: \"Status Type Distribution\",\n                },\n              },\n              responsive: true,\n              maintainAspectRatio: false,\n            }}\n          />{\" \"}\n        </div>{\" \"}\n      </div>{\" \"}\n      <h2 className=\"mt-4 text-2xl\"> Latest Entries </h2>{\" \"}\n      <table className=\"min-w-full table-auto mt-8\">\n        <thead>\n          <tr className=\"bg-gray-700\">\n            <th className=\"py-3 px-4 text-left text-gray-200\"> Date </th>{\" \"}\n            <th className=\"py-3 px-4 text-left text-gray-200\"> Day </th>{\" \"}\n            <th className=\"py-3 px-4 text-left text-gray-200\"> Plate Name </th>{\" \"}\n            <th className=\"py-3 px-4 text-left text-gray-200\"> Status Type </th>{\" \"}\n          </tr>{\" \"}\n        </thead>{\" \"}\n        <tbody>\n          {\" \"}\n          {data.map((item, index) => (\n            <tr\n              key={index}\n              className=\"border-b border-gray-800 odd:bg-gray-800 even:bg-gray-800 hover:bg-gray-600\"\n            >\n              <td className=\"py-2 px-4 text-gray-300\"> {item.Date} </td>{\" \"}\n              <td className=\"py-2 px-4 text-gray-300\"> {item.Day} </td>{\" \"}\n              <td className=\"py-2 px-4 text-gray-300\">\n                {\" \"}\n                {item[\"Plate Name\"]}{\" \"}\n              </td>{\" \"}\n              <td className=\"py-2 px-4 text-gray-300\"> {item.SatusType} </td>{\" \"}\n            </tr>\n          ))}{\" \"}\n        </tbody>{\" \"}\n      </table>{\" \"}\n    </div>\n  );\n};\n\nexport default StatisticsComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}