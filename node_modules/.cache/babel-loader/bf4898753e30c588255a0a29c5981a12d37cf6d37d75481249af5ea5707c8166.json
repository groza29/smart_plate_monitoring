{"ast":null,"code":"var _jsxFileName = \"/Users/grozaemanuel/smart_plate_monitoring/smart_plate_monitoring/src/TableComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ref, get } from \"firebase/database\";\nimport { database } from \"./Firebase\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst TableComponent = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [donutChartData, setDonutChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Plate Number Frequency\",\n      data: [],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\"],\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const dbRef = ref(database, \"/\");\n      const snapshot = await get(dbRef);\n      const fetchedData = snapshot.val();\n      if (fetchedData) {\n        const dataArray = Object.values(fetchedData);\n        const flatDataArray = dataArray.reduce((acc, cur) => acc.concat(Object.values(cur)), []);\n        const reverseData = flatDataArray.reverse();\n        setData(reverseData.slice(0, 20));\n        updateChartData(reverseData);\n\n        // Count frequency of plate names\n        const plateCount = {};\n        flatDataArray.forEach(item => {\n          const plateName = item[\"Plate Name\"];\n          if (plateName) {\n            plateCount[plateName] = (plateCount[plateName] || 0) + 1;\n          }\n        });\n\n        // Get the top 3 plate numbers\n        const sortedPlates = Object.entries(plateCount).sort((a, b) => b[1] - a[1]).slice(0, 3);\n        setChartData({\n          labels: sortedPlates.map(x => x[0]),\n          datasets: [{\n            ...chartData.datasets[0],\n            data: sortedPlates.map(x => x[1])\n          }]\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  const updateChartData = dataArray => {\n    const statusCounts = dataArray.reduce((acc, item) => {\n      const statusType = item.StatusType;\n      acc[statusType] = (acc[statusType] || 0) + 1;\n      return acc;\n    }, {});\n    const chartData = {\n      labels: Object.keys(statusCounts),\n      datasets: [{\n        label: \"Status Type\",\n        data: Object.values(statusCounts),\n        backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\"],\n        borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\n        borderWidth: 1\n      }]\n    };\n    setDonutChartData(donutChartData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto my-8 p-4 bg-gray-900 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          plugins: {\n            legend: {\n              position: \"top\"\n            },\n            title: {\n              display: true,\n              text: \"Top 3 Plate Numbers\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full table-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 text-left text-gray-200\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 text-left text-gray-200\",\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 text-left text-gray-200\",\n            children: \"Plate Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 text-left text-gray-200\",\n            children: \"Status Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-b border-gray-800 odd:bg-gray-800 even:bg-gray-800 hover:bg-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 text-gray-300\",\n            children: item.Date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 text-gray-300\",\n            children: item.Day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 text-gray-300\",\n            children: item[\"Plate Name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 text-gray-300\",\n            children: item.SatusType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-1/3\",\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(TableComponent, \"NK6Rdl36He0rjs35im9UijPoSMI=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useEffect","useState","ref","get","database","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","TableComponent","_s","data","setData","chartData","setChartData","donutChartData","setDonutChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","fetchData","dbRef","snapshot","fetchedData","val","dataArray","Object","values","flatDataArray","reduce","acc","cur","concat","reverseData","reverse","slice","updateChartData","plateCount","forEach","item","plateName","sortedPlates","entries","sort","a","b","map","x","statusCounts","statusType","StatusType","keys","className","children","style","marginBottom","options","plugins","legend","position","title","display","text","fileName","_jsxFileName","lineNumber","columnNumber","index","Date","Day","SatusType","_c","$RefreshReg$"],"sources":["/Users/grozaemanuel/smart_plate_monitoring/smart_plate_monitoring/src/TableComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ref, get } from \"firebase/database\";\nimport { database } from \"./Firebase\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst TableComponent = () => {\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [donutChartData, setDonutChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: \"Plate Number Frequency\",\n        data: [],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const dbRef = ref(database, \"/\");\n      const snapshot = await get(dbRef);\n      const fetchedData = snapshot.val();\n      if (fetchedData) {\n        const dataArray = Object.values(fetchedData);\n        const flatDataArray = dataArray.reduce(\n          (acc, cur) => acc.concat(Object.values(cur)),\n          []\n        );\n        const reverseData = flatDataArray.reverse();\n        setData(reverseData.slice(0, 20));\n        updateChartData(reverseData);\n\n        // Count frequency of plate names\n        const plateCount = {};\n        flatDataArray.forEach((item) => {\n          const plateName = item[\"Plate Name\"];\n          if (plateName) {\n            plateCount[plateName] = (plateCount[plateName] || 0) + 1;\n          }\n        });\n\n        // Get the top 3 plate numbers\n        const sortedPlates = Object.entries(plateCount)\n          .sort((a, b) => b[1] - a[1])\n          .slice(0, 3);\n        setChartData({\n          labels: sortedPlates.map((x) => x[0]),\n          datasets: [\n            {\n              ...chartData.datasets[0],\n              data: sortedPlates.map((x) => x[1]),\n            },\n          ],\n        });\n      }\n    };\n\n    fetchData();\n  }, []);\n  const updateChartData = (dataArray) => {\n    const statusCounts = dataArray.reduce((acc, item) => {\n      const statusType = item.StatusType;\n      acc[statusType] = (acc[statusType] || 0) + 1;\n      return acc;\n    }, {});\n\n    const chartData = {\n      labels: Object.keys(statusCounts),\n      datasets: [\n        {\n          label: \"Status Type\",\n          data: Object.values(statusCounts),\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n          ],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    setDonutChartData(donutChartData);\n  };\n\n  return (\n    <div className=\"container mx-auto my-8 p-4 bg-gray-900 rounded-lg shadow-lg\">\n      <div className=\"chart-container\" style={{ marginBottom: \"20px\" }}>\n        <Bar\n          data={chartData}\n          options={{\n            plugins: {\n              legend: { position: \"top\" },\n              title: { display: true, text: \"Top 3 Plate Numbers\" },\n            },\n          }}\n        />\n      </div>\n      <table className=\"min-w-full table-auto\">\n        <thead>\n          <tr className=\"bg-gray-700\">\n            <th className=\"py-3 px-4 text-left text-gray-200\">Date</th>\n            <th className=\"py-3 px-4 text-left text-gray-200\">Day</th>\n            <th className=\"py-3 px-4 text-left text-gray-200\">Plate Name</th>\n            <th className=\"py-3 px-4 text-left text-gray-200\">Status Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, index) => (\n            <tr\n              key={index}\n              className=\"border-b border-gray-800 odd:bg-gray-800 even:bg-gray-800 hover:bg-gray-600\"\n            >\n              <td className=\"py-2 px-4 text-gray-300\">{item.Date}</td>\n              <td className=\"py-2 px-4 text-gray-300\">{item.Day}</td>\n              <td className=\"py-2 px-4 text-gray-300\">{item[\"Plate Name\"]}</td>\n              <td className=\"py-2 px-4 text-gray-300\">{item.SatusType}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"w-full md:w-1/3\">\n        <Doughnut data={chartData} />\n      </div>\n    </div>\n  );\n};\nexport default TableComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}